div.svelte-1i6vtul{display:flex;flex-direction:row;align-items:center;align-content:center;justify-content:space-between;min-height:calc(10vh + (var(--pt) * 2));max-height:calc(10vh + (var(--pt) * 2));height:calc(10vh + (var(--pt) * 2));min-width:100%;max-width:100%;width:100%;position:sticky;position:-webkit-sticky;bottom:0;background-color:var(--col-prime);border-top:2px solid var(--col-primelight);padding:calc(var(--pt) * 2) calc(var(--pt) * 3)}a.svelte-1i6vtul{display:flex;flex-direction:row;align-items:center;align-content:center;justify-content:center}a.svelte-1i6vtul{min-height:100%;max-height:100%;height:100%;min-width:100%;max-width:100%;width:100%;border-radius:var(--pt);background-color:var(--col-seco);color:var(--col-prime);margin-right:var(--pt)}
div.svelte-dwtrfs{display:flex;flex-direction:column;align-items:center;align-content:center;justify-content:flex-start;padding-top:calc(var(--pt) * 1.5)}header.svelte-dwtrfs{padding:calc(var(--pt) * 3) calc(var(--pt) * 3) 0}ul.svelte-dwtrfs{padding:calc(var(--pt) * 3)}li.svelte-dwtrfs{list-style-type:none}dt.svelte-dwtrfs,li.svelte-dwtrfs{font-size:1rem}dd.svelte-dwtrfs,em.svelte-dwtrfs{font-size:.9rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */