import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, a as space, t as text, f as claim_element, g as children, c as claim_space, h as claim_text, b as detach_dev, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, o as set_data_dev, n as noop, p as set_style, r as createEventDispatcher, u as onDestroy, w as onMount, x as binding_callbacks, y as globals, z as not_equal, A as validate_each_argument, B as create_component, C as claim_component, D as mount_component, E as transition_in, F as transition_out, G as destroy_component, H as svg_element, I as xlink_attr, q as query_selector_all, J as check_outros, K as add_render_callback, L as create_in_transition, M as destroy_each, N as group_outros } from './client.ae4273fa.js';
import { f as fly } from './index.ff7bd4a9.js';

/* src/routes/posts/_Post.svelte generated by Svelte v3.24.1 */

const file = "src/routes/posts/_Post.svelte";

// (70:8) {:else}
function create_else_block(ctx) {
	let mark;
	let t_value = /*adhoc*/ ctx[0].type + "";
	let t;

	const block = {
		c: function create() {
			mark = element("mark");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			mark = claim_element(nodes, "MARK", { style: true, class: true });
			var mark_nodes = children(mark);
			t = claim_text(mark_nodes, t_value);
			mark_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(mark, "color", "var(--col-seco)");
			attr_dev(mark, "class", "svelte-e32vu4");
			add_location(mark, file, 70, 12, 1318);
		},
		m: function mount(target, anchor) {
			insert_dev(target, mark, anchor);
			append_dev(mark, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*adhoc*/ 1 && t_value !== (t_value = /*adhoc*/ ctx[0].type + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(mark);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(70:8) {:else}",
		ctx
	});

	return block;
}

// (68:8) {#if adhoc.type === "designer"}
function create_if_block(ctx) {
	let mark;
	let t_value = /*adhoc*/ ctx[0].type + "";
	let t;

	const block = {
		c: function create() {
			mark = element("mark");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			mark = claim_element(nodes, "MARK", { style: true, class: true });
			var mark_nodes = children(mark);
			t = claim_text(mark_nodes, t_value);
			mark_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(mark, "color", "var(--col-tert)");
			attr_dev(mark, "class", "svelte-e32vu4");
			add_location(mark, file, 68, 12, 1233);
		},
		m: function mount(target, anchor) {
			insert_dev(target, mark, anchor);
			append_dev(mark, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*adhoc*/ 1 && t_value !== (t_value = /*adhoc*/ ctx[0].type + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(mark);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(68:8) {#if adhoc.type === \\\"designer\\\"}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let a;
	let article;
	let t0;
	let h2;
	let t1_value = /*adhoc*/ ctx[0].title + "";
	let t1;
	let t2;
	let dl;
	let dt;
	let t3_value = /*adhoc*/ ctx[0].author + "";
	let t3;
	let dd;
	let t4_value = /*adhoc*/ ctx[0].city + "";
	let t4;
	let t5;
	let strong;
	let t6_value = /*adhoc*/ ctx[0].amount + "";
	let t6;
	let t7;
	let t8_value = /*adhoc*/ ctx[0].currency + "";
	let t8;
	let t9;
	let t10_value = /*adhoc*/ ctx[0].paytype + "";
	let t10;
	let a_href_value;
	let t11;
	let hr;

	function select_block_type(ctx, dirty) {
		if (/*adhoc*/ ctx[0].type === "designer") return create_if_block;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			a = element("a");
			article = element("article");
			if_block.c();
			t0 = space();
			h2 = element("h2");
			t1 = text(t1_value);
			t2 = space();
			dl = element("dl");
			dt = element("dt");
			t3 = text(t3_value);
			dd = element("dd");
			t4 = text(t4_value);
			t5 = space();
			strong = element("strong");
			t6 = text(t6_value);
			t7 = space();
			t8 = text(t8_value);
			t9 = text(" / ");
			t10 = text(t10_value);
			t11 = space();
			hr = element("hr");
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			article = claim_element(a_nodes, "ARTICLE", { class: true });
			var article_nodes = children(article);
			if_block.l(article_nodes);
			t0 = claim_space(article_nodes);
			h2 = claim_element(article_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t1 = claim_text(h2_nodes, t1_value);
			h2_nodes.forEach(detach_dev);
			t2 = claim_space(article_nodes);
			dl = claim_element(article_nodes, "DL", {});
			var dl_nodes = children(dl);
			dt = claim_element(dl_nodes, "DT", { class: true });
			var dt_nodes = children(dt);
			t3 = claim_text(dt_nodes, t3_value);
			dt_nodes.forEach(detach_dev);
			dd = claim_element(dl_nodes, "DD", { class: true });
			var dd_nodes = children(dd);
			t4 = claim_text(dd_nodes, t4_value);
			dd_nodes.forEach(detach_dev);
			dl_nodes.forEach(detach_dev);
			t5 = claim_space(article_nodes);
			strong = claim_element(article_nodes, "STRONG", { class: true });
			var strong_nodes = children(strong);
			t6 = claim_text(strong_nodes, t6_value);
			t7 = claim_space(strong_nodes);
			t8 = claim_text(strong_nodes, t8_value);
			t9 = claim_text(strong_nodes, " / ");
			t10 = claim_text(strong_nodes, t10_value);
			strong_nodes.forEach(detach_dev);
			article_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			t11 = claim_space(nodes);
			hr = claim_element(nodes, "HR", {});
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "svelte-e32vu4");
			add_location(h2, file, 72, 8, 1397);
			attr_dev(dt, "class", "svelte-e32vu4");
			add_location(dt, file, 74, 12, 1445);
			attr_dev(dd, "class", "svelte-e32vu4");
			add_location(dd, file, 75, 12, 1481);
			add_location(dl, file, 73, 8, 1428);
			attr_dev(strong, "class", "svelte-e32vu4");
			add_location(strong, file, 77, 8, 1525);
			attr_dev(article, "class", "svelte-e32vu4");
			add_location(article, file, 66, 4, 1171);
			attr_dev(a, "href", a_href_value = "post/" + /*adhoc*/ ctx[0].id);
			attr_dev(a, "class", "svelte-e32vu4");
			add_location(a, file, 65, 0, 1140);
			add_location(hr, file, 80, 0, 1612);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, article);
			if_block.m(article, null);
			append_dev(article, t0);
			append_dev(article, h2);
			append_dev(h2, t1);
			append_dev(article, t2);
			append_dev(article, dl);
			append_dev(dl, dt);
			append_dev(dt, t3);
			append_dev(dl, dd);
			append_dev(dd, t4);
			append_dev(article, t5);
			append_dev(article, strong);
			append_dev(strong, t6);
			append_dev(strong, t7);
			append_dev(strong, t8);
			append_dev(strong, t9);
			append_dev(strong, t10);
			insert_dev(target, t11, anchor);
			insert_dev(target, hr, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(article, t0);
				}
			}

			if (dirty & /*adhoc*/ 1 && t1_value !== (t1_value = /*adhoc*/ ctx[0].title + "")) set_data_dev(t1, t1_value);
			if (dirty & /*adhoc*/ 1 && t3_value !== (t3_value = /*adhoc*/ ctx[0].author + "")) set_data_dev(t3, t3_value);
			if (dirty & /*adhoc*/ 1 && t4_value !== (t4_value = /*adhoc*/ ctx[0].city + "")) set_data_dev(t4, t4_value);
			if (dirty & /*adhoc*/ 1 && t6_value !== (t6_value = /*adhoc*/ ctx[0].amount + "")) set_data_dev(t6, t6_value);
			if (dirty & /*adhoc*/ 1 && t8_value !== (t8_value = /*adhoc*/ ctx[0].currency + "")) set_data_dev(t8, t8_value);
			if (dirty & /*adhoc*/ 1 && t10_value !== (t10_value = /*adhoc*/ ctx[0].paytype + "")) set_data_dev(t10, t10_value);

			if (dirty & /*adhoc*/ 1 && a_href_value !== (a_href_value = "post/" + /*adhoc*/ ctx[0].id)) {
				attr_dev(a, "href", a_href_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
			if_block.d();
			if (detaching) detach_dev(t11);
			if (detaching) detach_dev(hr);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { adhoc } = $$props;
	const writable_props = ["adhoc"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Post> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Post", $$slots, []);

	$$self.$$set = $$props => {
		if ("adhoc" in $$props) $$invalidate(0, adhoc = $$props.adhoc);
	};

	$$self.$capture_state = () => ({ adhoc });

	$$self.$inject_state = $$props => {
		if ("adhoc" in $$props) $$invalidate(0, adhoc = $$props.adhoc);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [adhoc];
}

class Post extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { adhoc: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Post",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*adhoc*/ ctx[0] === undefined && !("adhoc" in props)) {
			console.warn("<Post> was created without expected prop 'adhoc'");
		}
	}

	get adhoc() {
		throw new Error("<Post>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set adhoc(value) {
		throw new Error("<Post>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/infinite/Scroll.svelte generated by Svelte v3.24.1 */
const file$1 = "src/components/infinite/Scroll.svelte";

function create_fragment$1(ctx) {
	let div;

	const block = {
		c: function create() {
			div = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { style: true });
			children(div).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(div, "width", "0px");
			add_location(div, file$1, 56, 0, 1469);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			/*div_binding*/ ctx[5](div);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			/*div_binding*/ ctx[5](null);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { threshold = 0 } = $$props;
	let { horizontal = false } = $$props;
	let { elementScroll } = $$props;
	let { hasMore = true } = $$props;

	// Props
	const dispatch = createEventDispatcher();

	let isLoadMore = false;
	let component;

	const onScroll = e => {
		const element = e.target;

		const offset = horizontal
		? e.target.scrollWidth - e.target.clientWidth - e.target.scrollLeft
		: e.target.scrollHeight - e.target.clientHeight - e.target.scrollTop;

		if (offset <= threshold) {
			if (!isLoadMore && hasMore) {
				dispatch("loadMore");
			}

			isLoadMore = true;
		} else {
			isLoadMore = false;
		}
	};

	onDestroy(() => {
		if (component || elementScroll) {
			const element = elementScroll ? elementScroll : component.parentNode;
			element.removeEventListener("scroll", null);
			element.removeEventListener("resize", null);
		}
	});

	const writable_props = ["threshold", "horizontal", "elementScroll", "hasMore"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Scroll> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Scroll", $$slots, []);

	function div_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			component = $$value;
			$$invalidate(0, component);
		});
	}

	$$self.$$set = $$props => {
		if ("threshold" in $$props) $$invalidate(1, threshold = $$props.threshold);
		if ("horizontal" in $$props) $$invalidate(2, horizontal = $$props.horizontal);
		if ("elementScroll" in $$props) $$invalidate(3, elementScroll = $$props.elementScroll);
		if ("hasMore" in $$props) $$invalidate(4, hasMore = $$props.hasMore);
	};

	$$self.$capture_state = () => ({
		onMount,
		onDestroy,
		createEventDispatcher,
		threshold,
		horizontal,
		elementScroll,
		hasMore,
		dispatch,
		isLoadMore,
		component,
		onScroll
	});

	$$self.$inject_state = $$props => {
		if ("threshold" in $$props) $$invalidate(1, threshold = $$props.threshold);
		if ("horizontal" in $$props) $$invalidate(2, horizontal = $$props.horizontal);
		if ("elementScroll" in $$props) $$invalidate(3, elementScroll = $$props.elementScroll);
		if ("hasMore" in $$props) $$invalidate(4, hasMore = $$props.hasMore);
		if ("isLoadMore" in $$props) isLoadMore = $$props.isLoadMore;
		if ("component" in $$props) $$invalidate(0, component = $$props.component);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*component, elementScroll*/ 9) {
			 {
				if (component || elementScroll) {
					const element = elementScroll ? elementScroll : component.parentNode;
					element.addEventListener("scroll", onScroll);
					element.addEventListener("resize", onScroll);
				}
			}
		}
	};

	return [component, threshold, horizontal, elementScroll, hasMore, div_binding];
}

class Scroll extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			threshold: 1,
			horizontal: 2,
			elementScroll: 3,
			hasMore: 4
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Scroll",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*elementScroll*/ ctx[3] === undefined && !("elementScroll" in props)) {
			console.warn("<Scroll> was created without expected prop 'elementScroll'");
		}
	}

	get threshold() {
		throw new Error("<Scroll>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set threshold(value) {
		throw new Error("<Scroll>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get horizontal() {
		throw new Error("<Scroll>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set horizontal(value) {
		throw new Error("<Scroll>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get elementScroll() {
		throw new Error("<Scroll>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set elementScroll(value) {
		throw new Error("<Scroll>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get hasMore() {
		throw new Error("<Scroll>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set hasMore(value) {
		throw new Error("<Scroll>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/posts/[page].svelte generated by Svelte v3.24.1 */

const { console: console_1 } = globals;
const file$2 = "src/routes/posts/[page].svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[6] = i;
	return child_ctx;
}

// (67:2) {#each adhoc as adhoc, i}
function create_each_block(ctx) {
	let post;
	let current;

	post = new Post({
			props: { adhoc: /*adhoc*/ ctx[1] },
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(post.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(post.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(post, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const post_changes = {};
			if (dirty & /*adhoc*/ 2) post_changes.adhoc = /*adhoc*/ ctx[1];
			post.$set(post_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(post.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(post.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(post, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(67:2) {#each adhoc as adhoc, i}",
		ctx
	});

	return block;
}

// (75:1) {#if next && adhoc.length > 0}
function create_if_block$1(ctx) {
	let a;
	let svg;
	let use;
	let t;

	const block = {
		c: function create() {
			a = element("a");
			svg = svg_element("svg");
			use = svg_element("use");
			t = text("\n\t\t\t Load more");
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			svg = claim_element(a_nodes, "svg", { class: true }, 1);
			var svg_nodes = children(svg);
			use = claim_element(svg_nodes, "use", { "xlink:href": true }, 1);
			children(use).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			t = claim_text(a_nodes, "\n\t\t\t Load more");
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			xlink_attr(use, "xlink:href", "/sprite.svg#plus");
			add_location(use, file$2, 76, 8, 1482);
			attr_dev(svg, "class", "svelte-1y6dfbc");
			add_location(svg, file$2, 76, 3, 1477);
			attr_dev(a, "class", "more svelte-1y6dfbc");
			attr_dev(a, "href", /*next*/ ctx[2]);
			add_location(a, file$2, 75, 2, 1445);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, svg);
			append_dev(svg, use);
			append_dev(a, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*next*/ 4) {
				attr_dev(a, "href", /*next*/ ctx[2]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(75:1) {#if next && adhoc.length > 0}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let t0;
	let section;
	let header;
	let h1;
	let t1;
	let t2;
	let div;
	let t3;
	let scroll;
	let t4;
	let section_intro;
	let current;
	let each_value = /*adhoc*/ ctx[1];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	scroll = new Scroll({
			props: {
				hasMore: /*adhoc*/ ctx[1].length,
				threshold: 100
			},
			$$inline: true
		});

	scroll.$on("loadMore", /*loadMore_handler*/ ctx[3]);
	let if_block = /*next*/ ctx[2] && /*adhoc*/ ctx[1].length > 0 && create_if_block$1(ctx);

	const block = {
		c: function create() {
			t0 = space();
			section = element("section");
			header = element("header");
			h1 = element("h1");
			t1 = text("Board");
			t2 = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t3 = space();
			create_component(scroll.$$.fragment);
			t4 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-ygz96u\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			header = claim_element(section_nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			h1 = claim_element(header_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Board");
			h1_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			t2 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			t3 = claim_space(div_nodes);
			claim_component(scroll.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			t4 = claim_space(section_nodes);
			if (if_block) if_block.l(section_nodes);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Browse";
			add_location(h1, file$2, 63, 2, 1224);
			attr_dev(header, "class", "svelte-1y6dfbc");
			add_location(header, file$2, 62, 1, 1213);
			attr_dev(div, "class", "svelte-1y6dfbc");
			add_location(div, file$2, 65, 1, 1251);
			attr_dev(section, "class", "svelte-1y6dfbc");
			add_location(section, file$2, 61, 0, 1156);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, header);
			append_dev(header, h1);
			append_dev(h1, t1);
			append_dev(section, t2);
			append_dev(section, div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			append_dev(div, t3);
			mount_component(scroll, div, null);
			append_dev(section, t4);
			if (if_block) if_block.m(section, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*adhoc*/ 2) {
				each_value = /*adhoc*/ ctx[1];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, t3);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}

			const scroll_changes = {};
			if (dirty & /*adhoc*/ 2) scroll_changes.hasMore = /*adhoc*/ ctx[1].length;
			scroll.$set(scroll_changes);

			if (/*next*/ ctx[2] && /*adhoc*/ ctx[1].length > 0) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					if_block.m(section, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			transition_in(scroll.$$.fragment, local);

			if (!section_intro) {
				add_render_callback(() => {
					section_intro = create_in_transition(section, fly, { duration: 320, y: 40, opacity: 1 });
					section_intro.start();
				});
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			transition_out(scroll.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section);
			destroy_each(each_blocks, detaching);
			destroy_component(scroll);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload({ params }) {
	const page = +params.page;

	// Fetch
	const res = await this.fetch(`https://6016e904f534300017a4509d.mockapi.io/board?page=${page}`);

	console.log("URL", res);

	// Validate
	if (res.status === 200) {
		const adhoc = await res.json();
		return { adhoc, page };
	}

	// Error
	this.error(500, "Problems with server. Be right back soon ;)");
}

function instance$2($$self, $$props, $$invalidate) {
	let { adhoc = [] } = $$props;
	let { page } = $$props;
	let data = [];

	onMount(() => {
		// load first batch onMount
		preload();
	});

	const writable_props = ["adhoc", "page"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<U5Bpageu5D> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("U5Bpageu5D", $$slots, []);
	const loadMore_handler = () => $$invalidate(0, page++, page);

	$$self.$$set = $$props => {
		if ("adhoc" in $$props) $$invalidate(1, adhoc = $$props.adhoc);
		if ("page" in $$props) $$invalidate(0, page = $$props.page);
	};

	$$self.$capture_state = () => ({
		preload,
		onMount,
		fly,
		Post,
		Scroll,
		adhoc,
		page,
		data,
		next
	});

	$$self.$inject_state = $$props => {
		if ("adhoc" in $$props) $$invalidate(1, adhoc = $$props.adhoc);
		if ("page" in $$props) $$invalidate(0, page = $$props.page);
		if ("data" in $$props) $$invalidate(4, data = $$props.data);
		if ("next" in $$props) $$invalidate(2, next = $$props.next);
	};

	let next;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*page*/ 1) {
			// Next
			 $$invalidate(2, next = `/posts/${+page + 1}`);
		}

		if ($$self.$$.dirty & /*data, adhoc*/ 18) {
			// Infinite
			 $$invalidate(4, data = [...data, ...adhoc]);
		}

		if ($$self.$$.dirty & /*adhoc*/ 2) {
			// DEVELOPER_CONSOLE_LOG
			 console.log("%c BROWSE adhoc ", "color:blue; font-weight:bold; font-size:14px", adhoc);
		}
	};

	return [page, adhoc, next, loadMore_handler];
}

class U5Bpageu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, not_equal, { adhoc: 1, page: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bpageu5D",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*page*/ ctx[0] === undefined && !("page" in props)) {
			console_1.warn("<U5Bpageu5D> was created without expected prop 'page'");
		}
	}

	get adhoc() {
		throw new Error("<U5Bpageu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set adhoc(value) {
		throw new Error("<U5Bpageu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get page() {
		throw new Error("<U5Bpageu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set page(value) {
		throw new Error("<U5Bpageu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Bpageu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
