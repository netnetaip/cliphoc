import { S as SvelteComponentDev, i as init, d as dispatch_dev, p as not_equal, R as stores$1, T as validate_store, U as component_subscribe, v as validate_slots, a as space, V as empty, q as query_selector_all, b as detach_dev, c as claim_space, l as insert_dev, H as transition_in, n as noop, u as validate_each_argument, t as text, h as claim_text, e as element, f as claim_element, g as children, j as attr_dev, k as add_location, m as append_dev, o as set_data_dev, O as add_render_callback, P as create_in_transition, C as destroy_each } from './client.62a6b8a7.js';
import { f as fly } from './index.ff7bd4a9.js';

/* src/routes/post/[uid].svelte generated by Svelte v3.24.1 */
const file = "src/routes/post/[uid].svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[5] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[5] = list[i];
	return child_ctx;
}

// (100:0) {:else}
function create_else_block(ctx) {
	let h1;
	let t;

	const block = {
		c: function create() {
			h1 = element("h1");
			t = text("Sorry mate, something's wrong. Get back in couple minutes.");
			this.h();
		},
		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t = claim_text(h1_nodes, "Sorry mate, something's wrong. Get back in couple minutes.");
			h1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file, 100, 1, 2049);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h1, anchor);
			append_dev(h1, t);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(h1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(100:0) {:else}",
		ctx
	});

	return block;
}

// (44:0) {#if $page}
function create_if_block(ctx) {
	let div;
	let section0;
	let header0;
	let h1;
	let t0_value = /*adhoc*/ ctx[0].title + "";
	let t0;
	let t1;
	let dl;
	let dt;
	let t2_value = /*adhoc*/ ctx[0].author + "";
	let t2;
	let dd;
	let t3_value = /*adhoc*/ ctx[0].city + "";
	let t3;
	let t4;
	let strong;
	let t5_value = /*adhoc*/ ctx[0].amount + "";
	let t5;
	let t6;
	let t7;
	let section1;
	let header1;
	let h20;
	let t8;
	let t9;
	let ul0;
	let t10;
	let section2;
	let header2;
	let h21;
	let t11;
	let t12;
	let ul1;
	let t13;
	let button;
	let t14;
	let div_intro;
	let if_block = /*adhoc*/ ctx[0].hour && create_if_block_1(ctx);
	let each_value_1 = /*adhoc*/ ctx[0].brief;
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let each_value = /*adhoc*/ ctx[0].requirements;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");
			section0 = element("section");
			header0 = element("header");
			h1 = element("h1");
			t0 = text(t0_value);
			t1 = space();
			dl = element("dl");
			dt = element("dt");
			t2 = text(t2_value);
			dd = element("dd");
			t3 = text(t3_value);
			t4 = space();
			strong = element("strong");
			t5 = text(t5_value);
			t6 = text("€\n\t\t\t\t");
			if (if_block) if_block.c();
			t7 = space();
			section1 = element("section");
			header1 = element("header");
			h20 = element("h2");
			t8 = text("Brief");
			t9 = space();
			ul0 = element("ul");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t10 = space();
			section2 = element("section");
			header2 = element("header");
			h21 = element("h2");
			t11 = text("Requirements");
			t12 = space();
			ul1 = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t13 = space();
			button = element("button");
			t14 = text("Show contacts");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			section0 = claim_element(div_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			header0 = claim_element(section0_nodes, "HEADER", { class: true });
			var header0_nodes = children(header0);
			h1 = claim_element(header0_nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, t0_value);
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(header0_nodes);
			dl = claim_element(header0_nodes, "DL", {});
			var dl_nodes = children(dl);
			dt = claim_element(dl_nodes, "DT", {});
			var dt_nodes = children(dt);
			t2 = claim_text(dt_nodes, t2_value);
			dt_nodes.forEach(detach_dev);
			dd = claim_element(dl_nodes, "DD", {});
			var dd_nodes = children(dd);
			t3 = claim_text(dd_nodes, t3_value);
			dd_nodes.forEach(detach_dev);
			dl_nodes.forEach(detach_dev);
			header0_nodes.forEach(detach_dev);
			t4 = claim_space(section0_nodes);
			strong = claim_element(section0_nodes, "STRONG", { class: true });
			var strong_nodes = children(strong);
			t5 = claim_text(strong_nodes, t5_value);
			t6 = claim_text(strong_nodes, "€\n\t\t\t\t");
			if (if_block) if_block.l(strong_nodes);
			strong_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t7 = claim_space(div_nodes);
			section1 = claim_element(div_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			header1 = claim_element(section1_nodes, "HEADER", { class: true });
			var header1_nodes = children(header1);
			h20 = claim_element(header1_nodes, "H2", {});
			var h20_nodes = children(h20);
			t8 = claim_text(h20_nodes, "Brief");
			h20_nodes.forEach(detach_dev);
			header1_nodes.forEach(detach_dev);
			t9 = claim_space(section1_nodes);
			ul0 = claim_element(section1_nodes, "UL", { class: true });
			var ul0_nodes = children(ul0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(ul0_nodes);
			}

			ul0_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			t10 = claim_space(div_nodes);
			section2 = claim_element(div_nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);
			header2 = claim_element(section2_nodes, "HEADER", { class: true });
			var header2_nodes = children(header2);
			h21 = claim_element(header2_nodes, "H2", {});
			var h21_nodes = children(h21);
			t11 = claim_text(h21_nodes, "Requirements");
			h21_nodes.forEach(detach_dev);
			header2_nodes.forEach(detach_dev);
			t12 = claim_space(section2_nodes);
			ul1 = claim_element(section2_nodes, "UL", { class: true });
			var ul1_nodes = children(ul1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul1_nodes);
			}

			ul1_nodes.forEach(detach_dev);
			section2_nodes.forEach(detach_dev);
			t13 = claim_space(div_nodes);
			button = claim_element(div_nodes, "BUTTON", { type: true, class: true });
			var button_nodes = children(button);
			t14 = claim_text(button_nodes, "Show contacts");
			button_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file, 48, 4, 998);
			add_location(dt, file, 50, 5, 1035);
			add_location(dd, file, 51, 5, 1064);
			add_location(dl, file, 49, 4, 1025);
			attr_dev(header0, "class", "svelte-pcxtsr");
			add_location(header0, file, 46, 3, 946);
			attr_dev(strong, "class", "svelte-pcxtsr");
			add_location(strong, file, 54, 3, 1112);
			attr_dev(section0, "class", "svelte-pcxtsr");
			add_location(section0, file, 45, 2, 933);
			add_location(h20, file, 70, 4, 1557);
			attr_dev(header1, "class", "svelte-pcxtsr");
			add_location(header1, file, 69, 3, 1544);
			attr_dev(ul0, "class", "svelte-pcxtsr");
			add_location(ul0, file, 72, 3, 1588);
			attr_dev(section1, "class", "svelte-pcxtsr");
			add_location(section1, file, 68, 2, 1531);
			add_location(h21, file, 80, 4, 1708);
			attr_dev(header2, "class", "svelte-pcxtsr");
			add_location(header2, file, 79, 3, 1695);
			attr_dev(ul1, "class", "svelte-pcxtsr");
			add_location(ul1, file, 82, 3, 1746);
			attr_dev(section2, "class", "svelte-pcxtsr");
			add_location(section2, file, 78, 2, 1682);
			attr_dev(button, "type", "button");
			attr_dev(button, "class", "svelte-pcxtsr");
			add_location(button, file, 88, 2, 1847);
			attr_dev(div, "class", "svelte-pcxtsr");
			add_location(div, file, 44, 1, 879);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, section0);
			append_dev(section0, header0);
			append_dev(header0, h1);
			append_dev(h1, t0);
			append_dev(header0, t1);
			append_dev(header0, dl);
			append_dev(dl, dt);
			append_dev(dt, t2);
			append_dev(dl, dd);
			append_dev(dd, t3);
			append_dev(section0, t4);
			append_dev(section0, strong);
			append_dev(strong, t5);
			append_dev(strong, t6);
			if (if_block) if_block.m(strong, null);
			append_dev(div, t7);
			append_dev(div, section1);
			append_dev(section1, header1);
			append_dev(header1, h20);
			append_dev(h20, t8);
			append_dev(section1, t9);
			append_dev(section1, ul0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(ul0, null);
			}

			append_dev(div, t10);
			append_dev(div, section2);
			append_dev(section2, header2);
			append_dev(header2, h21);
			append_dev(h21, t11);
			append_dev(section2, t12);
			append_dev(section2, ul1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul1, null);
			}

			append_dev(div, t13);
			append_dev(div, button);
			append_dev(button, t14);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*adhoc*/ 1 && t0_value !== (t0_value = /*adhoc*/ ctx[0].title + "")) set_data_dev(t0, t0_value);
			if (dirty & /*adhoc*/ 1 && t2_value !== (t2_value = /*adhoc*/ ctx[0].author + "")) set_data_dev(t2, t2_value);
			if (dirty & /*adhoc*/ 1 && t3_value !== (t3_value = /*adhoc*/ ctx[0].city + "")) set_data_dev(t3, t3_value);
			if (dirty & /*adhoc*/ 1 && t5_value !== (t5_value = /*adhoc*/ ctx[0].amount + "")) set_data_dev(t5, t5_value);

			if (/*adhoc*/ ctx[0].hour) {
				if (if_block) ; else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					if_block.m(strong, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*adhoc*/ 1) {
				each_value_1 = /*adhoc*/ ctx[0].brief;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(ul0, null);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*adhoc*/ 1) {
				each_value = /*adhoc*/ ctx[0].requirements;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (!div_intro) {
				add_render_callback(() => {
					div_intro = create_in_transition(div, fly, { duration: 320, y: 40, opacity: 1 });
					div_intro.start();
				});
			}
		},
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (if_block) if_block.d();
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(44:0) {#if $page}",
		ctx
	});

	return block;
}

// (57:4) {#if adhoc.hour}
function create_if_block_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("an hour");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "an hour");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(57:4) {#if adhoc.hour}",
		ctx
	});

	return block;
}

// (74:4) {#each adhoc.brief as list}
function create_each_block_1(ctx) {
	let li;
	let t_value = /*list*/ ctx[5] + "";
	let t;

	const block = {
		c: function create() {
			li = element("li");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			t = claim_text(li_nodes, t_value);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(li, "class", "svelte-pcxtsr");
			add_location(li, file, 74, 5, 1630);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*adhoc*/ 1 && t_value !== (t_value = /*list*/ ctx[5] + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(74:4) {#each adhoc.brief as list}",
		ctx
	});

	return block;
}

// (84:4) {#each adhoc.requirements as list}
function create_each_block(ctx) {
	let li;
	let t_value = /*list*/ ctx[5] + "";
	let t;

	const block = {
		c: function create() {
			li = element("li");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			t = claim_text(li_nodes, t_value);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(li, "class", "svelte-pcxtsr");
			add_location(li, file, 84, 5, 1795);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*adhoc*/ 1 && t_value !== (t_value = /*list*/ ctx[5] + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(84:4) {#each adhoc.requirements as list}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title_value;
	let t;
	let if_block_anchor;
	document.title = title_value = /*adhoc*/ ctx[0].title;

	function select_block_type(ctx, dirty) {
		if (/*$page*/ ctx[1]) return create_if_block;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			t = space();
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-w6u6cv\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*adhoc*/ 1 && title_value !== (title_value = /*adhoc*/ ctx[0].title)) {
				document.title = title_value;
			}

			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		i: function intro(local) {
			transition_in(if_block);
		},
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload(page) {
	// URL + ID
	const { uid } = page.params;

	const url = "https://6016e904f534300017a4509d.mockapi.io/board/" + uid;

	// Fetch
	const res = await this.fetch(url);

	// Validate
	if (res.status === 200) {
		const adhoc = await res.json();
		return { adhoc };
	} else {
		// Error
		return this.error(404, "Problems with server. Be right back soon.");
	}
}

function instance($$self, $$props, $$invalidate) {
	let $page;
	const { preloading, page } = stores$1();
	validate_store(page, "page");
	component_subscribe($$self, page, value => $$invalidate(1, $page = value));
	let { adhoc } = $$props;

	// Back
	const historyback = () => {
		if (typeof window !== "undefined") {
			window.history.back();
		}
	};

	const writable_props = ["adhoc"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Buidu5D> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("U5Buidu5D", $$slots, []);

	$$self.$$set = $$props => {
		if ("adhoc" in $$props) $$invalidate(0, adhoc = $$props.adhoc);
	};

	$$self.$capture_state = () => ({
		preload,
		stores: stores$1,
		preloading,
		page,
		fly,
		adhoc,
		historyback,
		$page
	});

	$$self.$inject_state = $$props => {
		if ("adhoc" in $$props) $$invalidate(0, adhoc = $$props.adhoc);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [adhoc, $page, page];
}

class U5Buidu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, not_equal, { adhoc: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Buidu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*adhoc*/ ctx[0] === undefined && !("adhoc" in props)) {
			console.warn("<U5Buidu5D> was created without expected prop 'adhoc'");
		}
	}

	get adhoc() {
		throw new Error("<U5Buidu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set adhoc(value) {
		throw new Error("<U5Buidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Buidu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3VpZF0uYTFkMGFjNTQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvcG9zdC9bdWlkXS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHN2ZWx0ZTpvcHRpb25zIGltbXV0YWJsZSAvPlxuXG48IS0tIFNlcnZlciAtLT5cbjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZChwYWdlKSB7XG5cdFx0Ly8gVVJMICsgSURcblx0XHRjb25zdCB7IHVpZCB9ID0gcGFnZS5wYXJhbXM7XG5cdFx0Y29uc3QgdXJsID0gXCJodHRwczovLzYwMTZlOTA0ZjUzNDMwMDAxN2E0NTA5ZC5tb2NrYXBpLmlvL2JvYXJkL1wiICsgdWlkO1xuXHRcdC8vIEZldGNoXG5cdFx0Y29uc3QgcmVzID0gYXdhaXQgdGhpcy5mZXRjaCh1cmwpO1xuXHRcdC8vIFZhbGlkYXRlXG5cdFx0aWYgKHJlcy5zdGF0dXMgPT09IDIwMCkge1xuXHRcdFx0Y29uc3QgYWRob2MgPSBhd2FpdCByZXMuanNvbigpO1xuXHRcdFx0cmV0dXJuIHsgYWRob2MgfTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gRXJyb3Jcblx0XHRcdHJldHVybiB0aGlzLmVycm9yKDQwNCwgXCJQcm9ibGVtcyB3aXRoIHNlcnZlci4gQmUgcmlnaHQgYmFjayBzb29uLlwiKTtcblx0XHR9XG5cdH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuXHRpbXBvcnQgeyBzdG9yZXMgfSBmcm9tIFwiQHNhcHBlci9hcHBcIjtcblx0Y29uc3QgeyBwcmVsb2FkaW5nLCBwYWdlIH0gPSBzdG9yZXMoKTtcblx0aW1wb3J0IHsgZmx5IH0gZnJvbSBcInN2ZWx0ZS90cmFuc2l0aW9uXCI7XG5cblx0Ly8gRXhwb3J0ZWRcblx0ZXhwb3J0IGxldCBhZGhvYztcblxuXHQvLyBCYWNrXG5cdGNvbnN0IGhpc3RvcnliYWNrID0gKCkgPT4ge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR3aW5kb3cuaGlzdG9yeS5iYWNrKCk7XG5cdFx0fVxuXHR9O1xuPC9zY3JpcHQ+XG5cbjwhLS0gU3BlY2lhbCAtLT5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPnthZGhvYy50aXRsZX08L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPCEtLSBIVE1MIC0tPlxueyNpZiAkcGFnZX1cblx0PGRpdiBpbjpmbHk9e3sgZHVyYXRpb246IDMyMCwgeTogNDAsIG9wYWNpdHk6IDEgfX0+XG5cdFx0PHNlY3Rpb24+XG5cdFx0XHQ8aGVhZGVyPlxuXHRcdFx0XHQ8IS0tIDxtYXJrPnthZGhvYy50eXBlfTwvbWFyaz4gLS0+XG5cdFx0XHRcdDxoMT57YWRob2MudGl0bGV9PC9oMT5cblx0XHRcdFx0PGRsPlxuXHRcdFx0XHRcdDxkdD57YWRob2MuYXV0aG9yfTwvZHQ+XG5cdFx0XHRcdFx0PGRkPnthZGhvYy5jaXR5fTwvZGQ+XG5cdFx0XHRcdDwvZGw+XG5cdFx0XHQ8L2hlYWRlcj5cblx0XHRcdDxzdHJvbmc+XG5cdFx0XHRcdHthZGhvYy5hbW91bnR9JmV1cm87XG5cdFx0XHRcdHsjaWYgYWRob2MuaG91cn1cblx0XHRcdFx0XHRhbiBob3VyXG5cdFx0XHRcdHsvaWZ9XG5cdFx0XHQ8L3N0cm9uZz5cblx0XHQ8L3NlY3Rpb24+XG5cdFx0PCEtLSAmbmJzcDtcblx0XHRcdDxzdHJvbmc+e2FkaG9jLmFtb3VudH0ge2FkaG9jLmN1cnJlbmN5fSAvIHthZGhvYy5wYXl0eXBlfTwvc3Ryb25nPlxuXHRcdFx0eyNpZiBhZGhvYy5jdXJyZW5jeSA9PT0gXCJVU0RcIn1cblx0XHRcdFx0PGEgaHJlZj1cImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vc2VhcmNoP3E9e2FkaG9jLmFtb3VudH0rdXNkK3RvK2V1clwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cblx0XHRcdFx0XHQ8c3ZnPjx1c2UgeGxpbms6aHJlZj1cIi9zcHJpdGUuc3ZnI3BsdXNcIj48L3VzZT48L3N2Zz5cblx0XHRcdFx0PC9hPlxuXHRcdFx0ey9pZn0gLS0+XG5cdFx0PHNlY3Rpb24+XG5cdFx0XHQ8aGVhZGVyPlxuXHRcdFx0XHQ8aDI+QnJpZWY8L2gyPlxuXHRcdFx0PC9oZWFkZXI+XG5cdFx0XHQ8dWw+XG5cdFx0XHRcdHsjZWFjaCBhZGhvYy5icmllZiBhcyBsaXN0fVxuXHRcdFx0XHRcdDxsaT57bGlzdH08L2xpPlxuXHRcdFx0XHR7L2VhY2h9XG5cdFx0XHQ8L3VsPlxuXHRcdDwvc2VjdGlvbj5cblx0XHQ8c2VjdGlvbj5cblx0XHRcdDxoZWFkZXI+XG5cdFx0XHRcdDxoMj5SZXF1aXJlbWVudHM8L2gyPlxuXHRcdFx0PC9oZWFkZXI+XG5cdFx0XHQ8dWw+XG5cdFx0XHRcdHsjZWFjaCBhZGhvYy5yZXF1aXJlbWVudHMgYXMgbGlzdH1cblx0XHRcdFx0XHQ8bGk+e2xpc3R9PC9saT5cblx0XHRcdFx0ey9lYWNofVxuXHRcdFx0PC91bD5cblx0XHQ8L3NlY3Rpb24+XG5cdFx0PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCI+U2hvdyBjb250YWN0czwvYnV0dG9uPlxuXHQ8L2Rpdj5cblx0PCEtLSA8YWRkcmVzcz5cblx0XHR7YWRob2MuZW1haWx9XG5cdDwvYWRkcmVzcz5cblx0PGFkZHJlc3M+XG5cdFx0eyNpZiBhZGhvYy5waG9uZSAhPSBudWxsfVxuXHRcdFx0e2FkaG9jLnBob25lfVxuXHRcdHsvaWZ9XG5cdDwvYWRkcmVzcz4gLS0+XG5cdDwhLS0gQ1RBJ3MgLS0+XG57OmVsc2V9XG5cdDxoMT5Tb3JyeSBtYXRlLCBzb21ldGhpbmcncyB3cm9uZy4gR2V0IGJhY2sgaW4gY291cGxlIG1pbnV0ZXMuPC9oMT5cbnsvaWZ9XG5cbjwhLS0gQ1NTIC0tPlxuPHN0eWxlPlxuXHRkaXYsIHNlY3Rpb24ge1xuXHRcdC8qIERpc3BsYXkgKi9cblx0XHRkaXNwbGF5OiBncmlkO1xuXHRcdGFsaWduLWl0ZW1zOiBzdGFydDtcblx0XHRhbGlnbi1jb250ZW50OiBzdGFydDtcblx0XHRqdXN0aWZ5LWl0ZW1zOiBzdGFydDtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuXHRcdGdyaWQtYXV0by1mbG93OiBjb2x1bW47XG5cdFx0Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxMDAlO1xuXHRcdGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDQsIGF1dG8pO1xuXHRcdGdyaWQtY29sdW1uLWdhcDogY2FsYyh2YXIoLS1wdCkgLyAyKTtcblx0XHQvKiBTaXppbmcgKi9cblx0XHRtaW4td2lkdGg6IDEwMCU7XG5cdFx0bWF4LXdpZHRoOiAxMDAlO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cdGRpdiB7XG5cdFx0cGFkZGluZzogY2FsYyh2YXIoLS1wdCkgKiAzKTtcblx0fVxuXHRzZWN0aW9uIHtcblx0XHRtYXJnaW4tYm90dG9tOiBjYWxjKHZhcigtLXB0KSAqIDMpO1xuXHR9XG5cdGhlYWRlciB7XG5cdFx0LyogRGlzcGxheSAqL1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcblx0XHRhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRcdGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcblx0XHQvKiBTaXppbmcgKi9cblx0XHRtaW4td2lkdGg6IGluaGVyaXQ7XG5cdFx0bWF4LXdpZHRoOiBpbmhlcml0O1xuXHRcdHdpZHRoOiBpbmhlcml0O1xuXHR9XG5cdHN0cm9uZyB7XG5cdFx0bWFyZ2luLXRvcDogY2FsYyh2YXIoLS1wdCkgKiAyKTtcblx0XHQvKiBSZXN0ICovXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sLWdob3N0KTtcblx0XHRjb2xvcjogdmFyKC0tY29sLXNlY28pO1xuXHRcdHBhZGRpbmc6IHZhcigtLXB0KSBjYWxjKHZhcigtLXB0KSAqIDIpO1xuXHRcdGJvcmRlci1yYWRpdXM6IHZhcigtLXB0KTtcblx0fVxuXHR1bCB7XG5cdFx0bWFyZ2luOiB2YXIoLS1wdCkgMDtcblx0fVxuXHRsaSB7XG5cdFx0bGlzdC1zdHlsZS10eXBlOiBub25lO1xuXHR9XG5cdGJ1dHRvbiB7XG5cdFx0LyogRGlzcGxheSAqL1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IHJvdztcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0XHQvKiBTaXppbmcgKi9cblx0XHRtaW4td2lkdGg6IDEwMCU7XG5cdFx0bWF4LXdpZHRoOiAxMDAlO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdC8qIFJlc3QgKi9cblx0XHRwYWRkaW5nOiBjYWxjKHZhcigtLXB0KSAqIDIpIGNhbGModmFyKC0tcHQpICogMyk7XG5cdFx0Ym9yZGVyLXJhZGl1czogdmFyKC0tcHQpO1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbC1zZWNvKTtcblx0XHRjb2xvcjogdmFyKC0tY29sLXByaW1lKTtcblx0XHQvKiBUcmFuc2l0aW9uICovXG5cdFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgY3ViaWMtYmV6aWVyKDAuNDQsIDAuMjEsIDAsIDEpO1xuXHRcdHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG5cdH1cblx0YnV0dG9uOmFjdGl2ZSB7XG5cdFx0dHJhbnNmb3JtOiBzY2FsZTNkKDAuOTYsIDAuOTYsIDEpO1xuXHR9XG48L3N0eWxlPlxuIl0sIm5hbWVzIjpbInN0b3JlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBZ0RTLEdBQUssSUFBQyxLQUFLOzs7OzswQkFFVixHQUFLLElBQUMsTUFBTTs7OzBCQUNaLEdBQUssSUFBQyxJQUFJOzs7OzBCQUlmLEdBQUssSUFBQyxNQUFNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ1IsR0FBSyxJQUFDLElBQUk7OEJBaUJSLEdBQUssSUFBQyxLQUFLOzs7O2tDQUFoQixNQUFJOzs7OzRCQVVDLEdBQUssSUFBQyxZQUFZOzs7O2dDQUF2QixNQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lFQW5DRCxHQUFLLElBQUMsS0FBSztpRUFFVixHQUFLLElBQUMsTUFBTTtpRUFDWixHQUFLLElBQUMsSUFBSTtpRUFJZixHQUFLLElBQUMsTUFBTTs7aUJBQ1IsR0FBSyxJQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs2QkFpQlIsR0FBSyxJQUFDLEtBQUs7Ozs7aUNBQWhCLE1BQUk7Ozs7Ozs7Ozs7Ozs7Ozs7d0NBQUosTUFBSTs7OzsyQkFVQyxHQUFLLElBQUMsWUFBWTs7OzsrQkFBdkIsTUFBSTs7Ozs7Ozs7Ozs7Ozs7OztvQ0FBSixNQUFJOzs7Ozs7a0RBdkNNLFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkE4QnRDLEdBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OERBQUosR0FBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQVVKLEdBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OERBQUosR0FBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQ0E3Q0wsR0FBSyxJQUFDLEtBQUs7OztnQkFJZixHQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1RUFKRCxHQUFLLElBQUMsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBbkNHLE9BQU8sQ0FBQyxJQUFJOztTQUV6QixHQUFHLEtBQUssSUFBSSxDQUFDLE1BQU07O09BQ3JCLEdBQUcsR0FBRyxvREFBb0QsR0FBRyxHQUFHOzs7T0FFaEUsR0FBRyxTQUFTLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRzs7O0tBRTVCLEdBQUcsQ0FBQyxNQUFNLEtBQUssR0FBRztRQUNmLEtBQUssU0FBUyxHQUFHLENBQUMsSUFBSTtXQUNuQixLQUFLOzs7U0FHUCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSwyQ0FBMkM7Ozs7OztTQU81RCxVQUFVLEVBQUUsSUFBSSxLQUFLQSxRQUFNOzs7T0FJeEIsS0FBSzs7O09BR1YsV0FBVzthQUNMLE1BQU0sS0FBSyxXQUFXO0dBQ2hDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
